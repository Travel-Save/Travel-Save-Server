<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travel.attraction.model.mapper.AttractionMapper">
	<resultMap type="attractionDto" id="attraction">
	    <result column="user_id" property="userId"/>
	    <result column="content_id" property="contentid"/>
	    <result column="content_type_id" property="contenttypeid"/>
	    <result column="title" property="title"/>
	    <result column="firstimage" property="firstimage"/>
	    <result column="mapx" property="mapx"/>
	    <result column="mapy" property="mapy"/>
	    <result column="addr1" property="addr1"/>
	    <result column="likeCount" property="likeCount"/>
	    <result column="reg_date" property="regDate"/>
	    <result column="status" property="status"/>
	</resultMap>
	
	<insert id="insertFavorite" parameterType="map">
	    INSERT INTO tb_favorite_attraction (user_id, content_id)
	    VALUES (#{userId}, #{contentid})
	</insert>

	<!-- insertAttraction 메서드를 위한 SQL -->
	<insert id="insertAttraction" parameterType="map">
	    INSERT INTO tb_attraction (content_id, content_type_id, title, firstimage, mapx, mapy, addr1)
	    VALUES (#{contentid}, #{contenttypeid}, #{title}, #{firstimage}, #{mapx}, #{mapy}, #{addr1})
	</insert>
	
	<!-- selectOne 메서드를 위한 SQL -->
	<select id="selectOne" parameterType="map" resultMap="attraction">
	    SELECT * FROM tb_attraction
	    WHERE content_id = #{contentid}
	</select>



	<!-- AttractionMapper.xml -->
	<select id="getFavorite" parameterType="map" resultType="com.travel.attraction.model.AttractionFavoriteDto">
	    SELECT 
	        COUNT(*) AS likeCount
	        <if test="userId != null and userId != ''">
	            , (SELECT COALESCE(MAX(id), 0) FROM tb_favorite_attraction WHERE f.content_id = content_id AND user_id = #{userId}) AS isLike
	        </if>
	    FROM tb_favorite_attraction f
	    WHERE content_id = #{contentid}
	</select>
	
	<delete id="deleteFavorite" parameterType="map" >
		delete from tb_favorite_attraction
		where id = #{favoriteId} and content_id = #{contentid} and user_id = #{userId}
	</delete>
	
	<select id="listLikeAttraction" parameterType="map" resultMap="attraction">
	    select a.*,
	           (select count(*) from tb_favorite_attraction f where f.content_id = a.content_id) as likeCount
	    from tb_attraction a
	    <where>
	        <include refid="search"></include>
	        and a.status = 1
	        <if test="userId != null and userId != ''">and exists (select 1 from tb_favorite_attraction f where f.content_id = a.content_id and f.user_id = #{userId})</if>
	    </where>
	    order by
	    <if test="sort != null and sort != ''">${sort} desc,</if>
	    a.reg_date desc
	    limit #{start}, #{listsize}
	</select>

	
	<select id="getTotalAttractionCount" parameterType="map" resultType="int">
		select count(f.id)
		from tb_favorite_attraction f
		<where>
			<include refid="search"></include>
			and f.status = 1 and f.user_id = #{userId}
		</where>
	</select>
	
	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'f.title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'f.title'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>
</mapper>